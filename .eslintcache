[{"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/index.tsx":"1","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/serviceWorker.ts":"2","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/features/userSlice.ts":"3","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/App.tsx":"4","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/Feed.tsx":"5","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/Auth.tsx":"6","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/TweetInput.tsx":"7","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/Post.tsx":"8","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/firebase.ts":"9","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/app/store.ts":"10"},{"size":648,"mtime":1611040309404,"results":"11","hashOfConfig":"12"},{"size":5424,"mtime":1611040309407,"results":"13","hashOfConfig":"12"},{"size":881,"mtime":1611299259983,"results":"14","hashOfConfig":"12"},{"size":985,"mtime":1611060457980,"results":"15","hashOfConfig":"12"},{"size":1741,"mtime":1611209252617,"results":"16","hashOfConfig":"12"},{"size":12270,"mtime":1611118128428,"results":"17","hashOfConfig":"12"},{"size":3439,"mtime":1611146020384,"results":"18","hashOfConfig":"12"},{"size":4544,"mtime":1611195063780,"results":"19","hashOfConfig":"12"},{"size":794,"mtime":1611042809252,"results":"20","hashOfConfig":"12"},{"size":394,"mtime":1611044448926,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hxahaa",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/index.tsx",[],["44","45"],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/serviceWorker.ts",[],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/features/userSlice.ts",[],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/App.tsx",[],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/Feed.tsx",[],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/Auth.tsx",[],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/TweetInput.tsx",["46"],"import React, { useState } from 'react'\nimport styles from \"./TweetInput.module.css\"\nimport { useSelector } from \"react-redux\";\nimport { selectUser, userSlice } from '../features/userSlice';\nimport { storage, db, auth } from \"../firebase\";\nimport { Avatar, Button, IconButton } from \"@material-ui/core\";\nimport firebase from \"firebase/app\"\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\n\nconst TweetInput: React.FC = () => {\n  const user = useSelector(selectUser);\n  const [tweetImage, setTweetImage] = useState<File | null>(null);\n  const [tweetMsg, setTweetMsg] = useState(\"\");\n  const onChangeImageHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files![0]) {\n      setTweetImage(e.target.files![0]);\n      e.target.value = \"\";\n    }\n  };\n  const sendTweet = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (tweetImage) {\n      const S =\n        \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\n      const N = 16\n      const randomChar = Array.from(crypto.getRandomValues(new Uint32Array(N)))\n        .map((n) => S[n % S.length])\n        .join(\"\");\n      const fileName = randomChar + \"_\" + tweetImage.name;\n      const uploadTweetImg = storage.ref(`images/${fileName}`).put(tweetImage)\n      uploadTweetImg.on(\n        firebase.storage.TaskEvent.STATE_CHANGED,\n        () => { },\n        (err) => {\n          alert(err.message);\n        },\n        async () => {\n          await storage\n            .ref(\"images\")\n            .child(fileName)\n            .getDownloadURL()\n            .then(async (url) => {\n              await db.collection(\"posts\").add({\n                avatar: user.photoUrl,\n                image: url,\n                text: tweetMsg,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                username: user.displayName,\n              });\n            });\n        }\n      );\n    } else {\n      // ツイートのみ。\n      db.collection(\"posts\").add({\n        avatar: user.photoUrl,\n        image: \"\",\n        text: tweetMsg,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        username: user.displayName,\n      });\n    }\n    setTweetImage(null);\n    setTweetMsg(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={sendTweet}>\n        <div className={styles.tweet_form}>\n          <Avatar\n            className={styles.tweet_avatar}\n            src={user.photoUrl}\n            onClick={async () => {\n              await auth.signOut();\n            }}\n          />\n          <input\n            className={styles.tweet_input}\n            placeholder=\"What's happening?\"\n            type=\"text\"\n            autoFocus\n            value={tweetMsg}\n            onChange={(e) => setTweetMsg(e.target.value)}\n          />\n          <IconButton>\n            <label>\n              <AddAPhotoIcon\n                className={tweetImage ? styles.tweet_addIconLoaded : styles.tweet_addIcon}\n              />\n              <input\n                className={styles.tweet_hiddenIcon}\n                type=\"file\"\n                onChange={onChangeImageHandler}\n              />\n            </label>\n          </IconButton>\n        </div>\n        <Button\n          type=\"submit\"\n          disabled={!tweetMsg}\n          className={\n            tweetMsg ? styles.tweet_sendBtn : styles.tweet_sendDisableBtn\n          }\n        >Tweet</Button>\n      </form>\n    </>\n  )\n}\n\n\nexport default TweetInput ","/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/components/Post.tsx",["47"],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/firebase.ts",[],"/Users/Charlotte/Documents/OneDrive/05_Development/React/twitter_app/src/app/store.ts",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":22,"nodeType":"54","messageId":"55","endLine":4,"endColumn":31},{"ruleId":"52","severity":1,"message":"56","line":11,"column":10,"nodeType":"54","messageId":"55","endLine":11,"endColumn":37},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"@typescript-eslint/no-unused-vars","'userSlice' is defined but never used.","Identifier","unusedVar","'setSyntheticLeadingComments' is defined but never used.","no-global-assign","no-unsafe-negation"]